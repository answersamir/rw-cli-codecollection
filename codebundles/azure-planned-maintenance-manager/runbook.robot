*** Settings ***
Documentation       Analyse Azure Planned Maintenance events and impacted resources.
Metadata            Author    stewartshea
Metadata            Display Name    Azure Planned Maintenance
Metadata            Supports    Azure    Health    Maintenance

Library             BuiltIn
Library             RW.Core
Library             RW.CLI
Library             RW.platform

Suite Setup         Suite Initialization

*** Tasks ***
Inspect Active Maintenance Events in Resource Group `${AZ_RESOURCE_GROUP}`
    [Documentation]    Fetch and evaluate active planned maintenance events in the specified resource group.
    [Tags]    maintenance    access:read-only

    ${maintenance_run}=    RW.CLI.Run Bash File
    ...    bash_file=get_maintenance_events.sh
    ...    env=${env}
    ...    timeout_seconds=300
    ...    include_in_history=false    

    RW.Core.Add Pre To Report    ${maintenance_run.stdout}

    IF    "${maintenance_run.stderr}" != ''
        RW.Core.Add Issue
        ...    title=Errors encountered while running maintenance event script
        ...    severity=3
        ...    next_steps=Review debug logs in the Robot report
        ...    expected=No stderr output
        ...    actual=stderr encountered
        ...    reproduce_hint=${maintenance_run.cmd}
        ...    details=${maintenance_run.stderr}
    END

    # Invoke create_issues.sh to parse the maintenance events and create issues
    ${create_issues_run}=    RW.CLI.Run Bash File
    ...    bash_file=create_issues.sh
    ...    env=${env}
    ...    timeout_seconds=60
    ...    include_in_history=false
    RW.Core.Add Pre To Report    ${create_issues_run.stdout}
    IF    "${create_issues_run.stderr}" != ''
        RW.Core.Add Issue
        ...    title=Errors encountered while running create_issues.sh
        ...    severity=3
        ...    next_steps=Review debug logs in the Robot report
        ...    expected=No stderr output
        ...    actual=stderr encountered
        ...    reproduce_hint=${create_issues_run.cmd}
        ...    details=${create_issues_run.stderr}
    END

    # Read the issues.json file generated by create_issues.sh
    ${issues_json_cmd}=    RW.CLI.Run Cli
    ...    cmd=cat issues.json
    ...    env=${env}
    ...    timeout_seconds=60
    ...    include_in_history=false

    ${issue_list}=    Evaluate    json.loads(r'''${issues_json_cmd.stdout}''')    json

    IF    len(@{issue_list}) > 0
        FOR    ${item}    IN    @{issue_list}
            RW.Core.Add Issue
            ...    title=${item["title"]}
            ...    severity=${item["severity"]}
            ...    next_steps=${item["next_steps"]}
            ...    expected=No resources in maintenance
            ...    actual=Some resources are in maintenance
            ...    reproduce_hint=${maintenance_run.cmd}
            ...    details=${item["details"]}
        END
    END


*** Keywords ***
Suite Initialization
    ${AZ_RESOURCE_GROUP}=    RW.Core.Import User Variable    AZ_RESOURCE_GROUP
    ...    type=string
    ...    description=The resource group to perform actions against.
    ...    pattern=\w*
    ${AZURE_RESOURCE_SUBSCRIPTION_ID}=    RW.Core.Import User Variable    AZURE_RESOURCE_SUBSCRIPTION_ID
    ...    type=string
    ...    description=The Azure Subscription ID for the resource.  
    ...    pattern=\w*
    ...    default=""
    ${azure_credentials}=    RW.Core.Import Secret
    ...    azure_credentials
    ...    type=string
    ...    description=The secret containing AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_CLIENT_SECRET
    ...    pattern=\w*
    ${AZ_USERNAME}=    RW.Core.Import User Variable
    ...    AZ_USERNAME
    ...    type=string
    ...    description=The azure service principal user ID.
    ...    pattern=\w*
    ${AZ_SECRET_VALUE}=    RW.Core.Import User Variable
    ...    AZ_SECRET_VALUE
    ...    type=string
    ...    description=The service principal client secret used to authenticate with azure.
    ...    pattern=\w*
    ${AZ_TENANT}=    RW.Core.Import User Variable
    ...    AZ_TENANT
    ...    type=string
    ...    description=The azure tenant ID used by the service principal to authenticate with azure.
    ...    pattern=\w*
    Set Suite Variable    ${AZ_RESOURCE_GROUP}    ${AZ_RESOURCE_GROUP}
    Set Suite Variable    ${AZURE_RESOURCE_SUBSCRIPTION_ID}    ${AZURE_RESOURCE_SUBSCRIPTION_ID}
    Set Suite Variable    ${AZ_USERNAME}    ${AZ_USERNAME}
    Set Suite Variable    ${AZ_SECRET_VALUE}    ${AZ_SECRET_VALUE}
    Set Suite Variable    ${AZ_TENANT}    ${AZ_TENANT}
    Set Suite Variable
    ...    ${env}
    ...    {"AZ_RESOURCE_GROUP":"${AZ_RESOURCE_GROUP}","AZURE_RESOURCE_SUBSCRIPTION_ID":"${AZURE_RESOURCE_SUBSCRIPTION_ID}","AZ_USERNAME":"${AZ_USERNAME}","AZ_SECRET_VALUE":"${AZ_SECRET_VALUE}","AZ_TENANT":"${AZ_TENANT}"}
